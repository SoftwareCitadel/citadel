package appsPages

import (
	"fmt"
	"encoding/json"

	"citadel/views/layouts"
	"citadel/views/ui"
	"citadel/app/models"
)

templ EnvPage(app models.Application) {
	@layouts.DashboardLayout(layouts.DashboardLayoutProps{Class: "!p-0 !pb-6"}) {
		@breadcrumbs(app)
		@tabs(app)
		@EnvForm(app)
	}
}

templ EnvForm(app models.Application) {
	<form class="px-12 space-y-8" hx-patch={ "/apps/" + app.Slug + "/env" } hx-swap="outerHTML" hx-target="#env-form" id="env-form">
		@ui.Card(ui.CardProps{
			Title: "Manage environment variables",
			Class: "!p-0",
		}) {
			<div class="px-6 mb-4" x-data={ fmt.Sprintf("{ env: %s }", getInitialData(app)) }>
				<input hidden name="env" x-model="JSON.stringify(env)"/>
				<div class="flex items-center space-x-4">
					<label class="text-sm font-medium leading-none w-1/2 text-white">Key</label>
					<label class="text-sm font-medium leading-none w-1/2 text-white">Value</label>
					<span class="w-4"></span>
				</div>
				<div class="space-y-1">
					<template x-for="(var, idx) in env" :key="index">
						<div class="flex items-center space-x-4">
							@ui.InputField(ui.InputFieldProps{
								DivClass:    "w-full",
								Placeholder: "DATABASE_URL",
								Extra:       map[string]interface{}{"x-model": "env[idx].key"},
							})
							@ui.InputField(ui.InputFieldProps{
								DivClass:    "w-full",
								Placeholder: "postgresql://user:password@host:port/database",
								Extra:       map[string]interface{}{"x-model": "env[idx].value"},
							})
							<button class="flex items-center justify-center" x-on:click="env.splice(idx, 1)" type="button">
								<i class="fa-solid fa-minus cursor-pointer hover:opacity-75 transition rounded-full border border-zinc-300/50 p-[2px] w-3 h-3 text-zinc-300/75"></i>
							</button>
						</div>
					</template>
				</div>
				<div class="mt-2">
					@ui.Button(ui.ButtonProps{
						Variant: ui.ButtonVariantSecondary,
						Icon:    "fa-solid fa-plus",
						Type:    "button",
					
						Extra: map[string]interface{}{"@click": "env.push({ key: '', value: '' })"},
					}) {
						Add variable
					}
				</div>
			</div>
			<div class="px-6 py-4 border-t border-zinc-300/20">
				@ui.Button(ui.ButtonProps{
					Variant: ui.ButtonVariantPrimary,
					Type:    "submit",
				}) {
					Save variables
				}
			</div>
		}
	</form>
}

func getInitialData(app models.Application) string {
	b, _ := json.Marshal(app.Env)
	result := string(b)

	if result == "null" || result == "[]" || result == "{}" {
		return "[{\"key\":\"\",\"value\":\"\"}]"
	}

	return result
}
