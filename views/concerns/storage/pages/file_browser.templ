package storagePages

import (
	"citadel/app/models"
	"citadel/views/ui"
)

templ fileBrowser(storageBucket models.StorageBucket, storageFiles []models.StorageFile) {
	<div class="px-12">
		@ui.Card(ui.CardProps{
			Header:      fileBrowserHeader(storageBucket),
			Class:       "!mt-0",
			SubDivClass: "!px-6 !py-2",
		}) {
			@ui.Card(ui.CardProps{
				Class: "!mt-0 !p-0",
			}) {
				<table class="min-w-full divide-y divide-zinc-700 mt-1">
					<thead class="bg-zinc-900">
						<tr>
							<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-white sm:pl-6">
								Name
							</th>
							<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-white">
								Content Type
							</th>
							<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-white">
								Size
							</th>
							<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-white">
								Updated At
							</th>
							<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6"></th>
						</tr>
					</thead>
					<tbody class="divide-y divide-zinc-700 bg-white/2.5">
						if len(storageFiles) == 0 {
							<tr>
								<td class="py-4 pl-4 pr-3 text-sm font-medium text-zinc-300 sm:pl-6" colspan="5">
									No files found
								</td>
							</tr>
						}
						for _, file := range storageFiles {
							@fileBrowserTableItem(file)
						}
					</tbody>
				</table>
			}
		}
	</div>
}

templ fileBrowserTableItem(file models.StorageFile) {
	<tr>
		<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-zinc-300 sm:pl-6">
			{ file.Name }
		</td>
		<td class="whitespace-nowrap px-3 py-4 text-sm text-zinc-300">
			{ file.Type }
		</td>
		<td class="whitespace-nowrap px-3 py-4 text-sm text-zinc-300">
			{ formatFileSize(file.Size) }
		</td>
		<td class="whitespace-nowrap px-3 py-4 text-sm text-zinc-300">
			{ file.UpdatedAt.Format("Jan 2, 2006") }
		</td>
		<td
			class="absolute z-10 whitespace-nowrap py-4 pl-3 pr-4 text-right flex items-center justify-center flex text-sm font-medium sm:pr-6"
			x-data="dropdown()"
		>
			<button
				class="text-zinc-300 hover:text-zinc-50 text-lg transition-colors -mt-1"
				@click="toggleDropdown"
				x-bind:aria-expanded="dropdownOpen"
			>
				...
			</button>
		</td>
	</tr>
}

templ fileBrowserHeader(bucket models.StorageBucket) {
	<div class="flex items-center space-x-2">
		<div class="flex items-center space-x-2 text-white">
			<i class="w-5 h-5 fa-solid fa-cloud"></i>
			<h2 class="font-semibold text-sm">{ bucket.Name }</h2>
		</div>
		@uploadFileForm(bucket)
	</div>
}

templ uploadFileForm(bucket models.StorageBucket) {
	<script>
        function handleFileInput(event) {
            if (event.target.files && event.target.files.length > 0) {
                document.getElementById('upload-form').submit();
            }
        }
    </script>
	<form
		class="mt-3"
		id="upload-form"
		encType="multipart/form-data"
		action={ templ.SafeURL("/storage/" + bucket.Slug + "/upload") }
		method="POST"
	>
		<label class="primary-btn ml-4" for="file">
			<i class="h-3 w-3 fa-solid fa-upload"></i>
			<span class="ml-1">Upload file</span>
		</label>
		<input
			type="file"
			name="file"
			id="file"
			oninput="handleFileInput(event)"
			hidden
		/>
	</form>
}

script onUploadClick() {
	document.getElementById('file').click()
}
